name: Auto-version on tag

on:
  push:
    tags:
      - '*'

jobs:
  set_version:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.sha.outputs.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0

      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: \bVersion\s=>\s"v?[\d\.]+
          replace: "Version => \"${{ github.ref_name }}"
          include: "Necromancy.cs"

      - name: Set user info
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Check if there are any changes
        id: verify_diff
        run: |
          git diff --quiet . || echo "changed=true" >> $GITHUB_OUTPUT

      - name: Commit Files & Pull
        if: steps.verify_diff.outputs.changed == 'true'
        run: |
          git commit -a -m "Updated version with CI."
          git pull origin main --rebase

      - name: Push Changes
        if: steps.verify_diff.outputs.changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

      - name: Get SHA
        id: sha
        run: |
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo ${{ steps.sha.outputs.sha }}

  create_sml_and_publish:
    runs-on: ubuntu-latest
    needs: [ set_version ]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Get all history to allow automatic versioning using MinVer
        ref: ${{ needs.set_version.outputs.sha }}

    # Install the .NET SDK indicated in the global.json file
    - name: Setup .NET
      uses: actions/setup-dotnet@v4

    # Download msp
    - name: Download MSP
      run: dotnet tool install --global ModShardPacker --version 1.3.2
    
    # Run msp and add to release
    - name: Run MSP
      run: |
        mkdir -p ${{ github.workspace }}/output
        msp -f ${{ github.workspace }} -o ${{ github.workspace }}/output -n Necromancy
        zip -j ${{ github.event.repository.name }}.zip ${{ github.workspace }}/output/*.sml

    - uses: actions/upload-artifact@v3
      with:
        name: sml
        if-no-files-found: error
        retention-days: 7
        path: ${{ github.event.repository.name }}.zip
  
    - name: Create Release
      run: gh release create ${{ github.ref_name }} -t "v${{ github.ref_name }}" ${{ github.event.repository.name }}.zip --generate-notes
      env:
        GITHUB_TOKEN: ${{ github.TOKEN }}